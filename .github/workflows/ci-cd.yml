name: CI/CD Pipeline

on:
  push:
    branches: [master, develop, preTest, postTest]
  pull_request:
    branches: [master]
  workflow_dispatch:
    inputs:
      source_branch:
        description: 'Source branch to deploy from'
        required: true
        default: 'develop'
        type: choice
        options:
          - develop
          - preTest
          - postTest
      target_branch:
        description: 'Target branch to deploy to'
        required: true
        default: 'preTest'
        type: choice
        options:
          - preTest
          - postTest
          - master

env:
  NODE_VERSION: '20'
  REGISTRY: docker.io
  IMAGE_NAME: ${{ secrets.DOCKER_USERNAME }}/personal-portfolio

jobs:
  test:
    name: Test & Lint
    runs-on: ubuntu-latest

    permissions:
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run linting
        run: npm run lint

      - name: Run type checking
        run: npm run type-check

      - name: Run unit tests
        run: npm run test:unit

  build:
    name: Build Application
    runs-on: ubuntu-latest
    needs: test

    permissions:
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install dependencies
        run: npm ci

      - name: Build application
        run: npm run build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist-files
          path: dist/
          retention-days: 7

  docker:
    name: Build & Push Docker Image
    runs-on: ubuntu-latest
    needs: [test, build]
    if: github.event_name == 'push' && (github.ref == 'refs/heads/master' || github.ref == 'refs/heads/postTest' || github.ref == 'refs/heads/preTest' || github.ref == 'refs/heads/develop')

    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to DockerHub
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=sha,prefix={{branch}}-
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  # Branch Deployment Jobs
  # Automatic deployments removed - all deployments now require manual triggering
  # Use workflow_dispatch to manually promote between branches:
  # develop â†’ preTest â†’ postTest â†’ master

  # deploy-to-posttest job removed - use manual workflow_dispatch instead

  # deploy-to-main job removed - use manual workflow_dispatch instead

  manual-deploy:
    name: Manual Deployment
    if: github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    needs: [test, build, docker]
    permissions:
      contents: write
      pull-requests: write
      actions: write

    steps:
      - name: Checkout source branch
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.source_branch }}
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: |
          npm run lint
          npm run type-check
          npm run test:unit
          npm run build

      - name: Deploy to target branch
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"

          # Create or update target branch
          git checkout -B ${{ github.event.inputs.target_branch }}

          # Push to target branch
          git push origin ${{ github.event.inputs.target_branch }} --force

      - name: Manual Branch Promotion Complete
        run: |
          echo "âœ… Manual branch promotion completed successfully!"
          echo "ðŸ“‹ Summary:"
          echo "   Source: ${{ github.event.inputs.source_branch }}"
          echo "   Target: ${{ github.event.inputs.target_branch }}"
          echo "   Tests: All passed âœ…"
          echo "   Build: Successful âœ…"
          echo ""
          echo "ðŸ”„ Next Steps:"
          echo "   1. Create a Pull Request manually from ${{ github.event.inputs.source_branch }} to ${{ github.event.inputs.target_branch }}"
          echo "   2. Review the changes carefully"
          echo "   3. Merge the PR manually when ready"
          echo "   4. Continue to next stage: develop â†’ preTest â†’ postTest â†’ master"

  deploy:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: [docker]
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    environment: production

    permissions:
      contents: read

    steps:
      - name: Deploy notification
        run: |
          echo "ðŸš€ Deploying personal portfolio to production..."
          echo "Docker image: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest"

      # Add your deployment steps here
      # Examples:
      # - Deploy to cloud provider (AWS, Azure, GCP)
      # - Update Kubernetes deployment
      # - Deploy to VPS via SSH
      # - Update Docker Compose on server

      - name: Deployment success
        run: echo "âœ… Deployment completed successfully!"

  # Error Handling and Notification Job
  notify-on-failure:
    name: Notify on Pipeline Failure
    runs-on: ubuntu-latest
    if: failure()
    needs:
      [
        test,
        build,
        docker,
        deploy-to-pretest,
        deploy-to-posttest,
        deploy-to-main,
        manual-deploy,
        deploy,
      ]

    permissions:
      contents: write
      actions: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get failed job details
        id: failed-job
        run: |
          echo "workflow_run_id=${{ github.run_id }}" >> $GITHUB_OUTPUT
          echo "workflow_url=https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}" >> $GITHUB_OUTPUT
          echo "commit_sha=${{ github.sha }}" >> $GITHUB_OUTPUT
          echo "branch_name=${{ github.ref_name }}" >> $GITHUB_OUTPUT
          echo "actor=${{ github.actor }}" >> $GITHUB_OUTPUT

      - name: Send failure notification email
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 587
          username: ${{ secrets.GMAIL_USERNAME }}
          password: ${{ secrets.GMAIL_APP_PASSWORD }}
          subject: 'ðŸš¨ CI/CD Pipeline Failed - ${{ github.repository }}'
          to: ${{ secrets.NOTIFICATION_EMAIL }}
          from: ${{ secrets.GMAIL_USERNAME }}
          html_body: |
            <h2>ðŸš¨ CI/CD Pipeline Failure Alert</h2>

            <p><strong>Repository:</strong> ${{ github.repository }}</p>
            <p><strong>Branch:</strong> ${{ github.ref_name }}</p>
            <p><strong>Commit:</strong> ${{ github.sha }}</p>
            <p><strong>Triggered by:</strong> ${{ github.actor }}</p>
            <p><strong>Workflow:</strong> ${{ github.workflow }}</p>

            <h3>ðŸ“‹ Failure Details:</h3>
            <ul>
              <li><strong>Run ID:</strong> ${{ github.run_id }}</li>
              <li><strong>Event:</strong> ${{ github.event_name }}</li>
              <li><strong>Time:</strong> ${{ github.event.head_commit.timestamp }}</li>
            </ul>

            <h3>ðŸ”— Quick Actions:</h3>
            <p>
              <a href="${{ steps.failed-job.outputs.workflow_url }}" style="background-color: #dc3545; color: white; padding: 10px 15px; text-decoration: none; border-radius: 5px;">View Failed Workflow</a>
              <a href="https://github.com/${{ github.repository }}/commit/${{ github.sha }}" style="background-color: #6c757d; color: white; padding: 10px 15px; text-decoration: none; border-radius: 5px; margin-left: 10px;">View Commit</a>
            </p>

            <h3>ðŸ”„ Next Steps:</h3>
            <ol>
              <li>Check the workflow logs for detailed error information</li>
              <li>Fix the issues in your code</li>
              <li>Push the fixes to trigger a new pipeline run</li>
            </ol>

            <hr>
            <p><small>This is an automated notification from the CI/CD pipeline.</small></p>

  notify-on-success:
    runs-on: ubuntu-latest
    if: success() && github.event_name == 'workflow_dispatch'
    needs: [
      test,
      build,
      docker,
      deploy-to-pretest,
      deploy-to-posttest,
      deploy-to-main,
      manual-deploy,
      deploy,
    ]

    permissions:
      contents: read
      actions: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get success job details
        id: success-job
        run: |
          echo "workflow_run_id=${{ github.run_id }}" >> $GITHUB_OUTPUT
          echo "workflow_url=https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}" >> $GITHUB_OUTPUT
          echo "commit_sha=${{ github.sha }}" >> $GITHUB_OUTPUT
          echo "branch_name=${{ github.ref_name }}" >> $GITHUB_OUTPUT
          echo "actor=${{ github.actor }}" >> $GITHUB_OUTPUT

      - name: Send success notification email
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 587
          username: ${{ secrets.GMAIL_USERNAME }}
          password: ${{ secrets.GMAIL_APP_PASSWORD }}
          subject: 'âœ… CI/CD Pipeline Successful - ${{ github.repository }}'
          to: ${{ secrets.NOTIFICATION_EMAIL }}
          from: ${{ secrets.GMAIL_USERNAME }}
          html_body: |
            <h2>âœ… CI/CD Pipeline Success</h2>

            <p>Great news! The CI/CD pipeline has completed successfully.</p>

            <h3>ðŸ“‹ Pipeline Details:</h3>
            <ul>
              <li><strong>Repository:</strong> ${{ github.repository }}</li>
              <li><strong>Branch:</strong> ${{ github.ref_name }}</li>
              <li><strong>Commit:</strong> ${{ github.sha }}</li>
              <li><strong>Triggered by:</strong> ${{ github.actor }}</li>
              <li><strong>Workflow:</strong> ${{ github.workflow }}</li>
              <li><strong>Run ID:</strong> ${{ github.run_id }}</li>
            </ul>

            <h3>ðŸš€ Completed Jobs:</h3>
            <ul>
              <li>âœ… Tests passed</li>
              <li>âœ… Build successful</li>
              <li>âœ… Docker image created</li>
              <li>âœ… Deployment completed</li>
            </ul>

            <h3>ðŸ”— Quick Links:</h3>
            <p>
              <a href="https://github.com/${{ github.repository }}/commit/${{ github.sha }}" style="background-color: #28a745; color: white; padding: 10px 15px; text-decoration: none; border-radius: 5px;">View Commit</a>
              <a href="${{ steps.success-job.outputs.workflow_url }}" style="background-color: #007bff; color: white; padding: 10px 15px; text-decoration: none; border-radius: 5px; margin-left: 10px;">View Workflow</a>
            </p>

            <hr>
            <p><small>This is an automated notification from the CI/CD pipeline.</small></p>

      - name: Revert on critical failure
        if: contains(github.ref, 'master') || contains(github.ref, 'main')
        run: |
          echo "ðŸ”„ Critical failure detected on main branch"
          echo "Initiating revert process..."

          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action - Auto Revert"

          # Get the previous commit
          PREVIOUS_COMMIT=$(git rev-parse HEAD~1)
          echo "Previous stable commit: $PREVIOUS_COMMIT"

          # Create revert commit
          git revert --no-edit HEAD

          # Push the revert
          git push origin ${{ github.ref_name }}

          echo "âœ… Revert completed. Previous stable state restored."

      - name: Send revert notification
        if: contains(github.ref, 'master') || contains(github.ref, 'main')
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 587
          username: ${{ secrets.GMAIL_USERNAME }}
          password: ${{ secrets.GMAIL_APP_PASSWORD }}
          subject: 'ðŸ”„ Auto-Revert Completed - ${{ github.repository }}'
          to: ${{ secrets.NOTIFICATION_EMAIL }}
          from: ${{ secrets.GMAIL_USERNAME }}
          html_body: |
            <h2>ðŸ”„ Automatic Revert Completed</h2>

            <p>Due to a critical failure in the CI/CD pipeline, an automatic revert has been performed on the <strong>${{ github.ref_name }}</strong> branch.</p>

            <h3>ðŸ“‹ Revert Details:</h3>
            <ul>
              <li><strong>Repository:</strong> ${{ github.repository }}</li>
              <li><strong>Branch:</strong> ${{ github.ref_name }}</li>
              <li><strong>Failed Commit:</strong> ${{ github.sha }}</li>
              <li><strong>Reverted by:</strong> GitHub Action</li>
            </ul>

            <h3>âœ… Current Status:</h3>
            <p>The repository has been reverted to the previous stable state. The application should now be functioning normally.</p>

            <h3>ðŸ”— Actions:</h3>
            <p>
              <a href="https://github.com/${{ github.repository }}/commits/${{ github.ref_name }}" style="background-color: #28a745; color: white; padding: 10px 15px; text-decoration: none; border-radius: 5px;">View Commit History</a>
              <a href="${{ steps.failed-job.outputs.workflow_url }}" style="background-color: #dc3545; color: white; padding: 10px 15px; text-decoration: none; border-radius: 5px; margin-left: 10px;">View Failed Workflow</a>
            </p>

            <hr>
            <p><small>This is an automated notification from the CI/CD pipeline.</small></p>
